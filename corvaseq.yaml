# Define our input data, assigning a name to each dataset.
# We will reference these names in the subsampling scheme
# below, as a way to select specific strains for the analysis.
inputs:
  - name: reference_data
    metadata: https://data.nextstrain.org/files/ncov/open/reference/metadata.tsv.xz
    aligned: https://data.nextstrain.org/files/ncov/open/reference/aligned.fasta.xz
  - name: corvaseq
    metadata: gisaid_auspice_omicron_corvaseq/omicron_corvaseq.metadata.tsv
    sequences: gisaid_auspice_omicron_corvaseq/omicron_corvaseq.sequences.fasta
  - name: north-america
    metadata: data/ncov_north-america.tar.gz 
    sequences: data/ncov_north-america.tar.gz

# GenBank data includes "Wuhan-Hu-1/2019" which we use as the root for this build.
refine:
  root: "Wuhan-Hu-1/2019"

# Define a single build for the state of interest, Idaho.
# The build name will be "idaho" and it will use the custom
# subsampling scheme defined below.
builds:
  northcarolina:
    title: "North Carolina-specific genomic surveillance build"
    subsampling_scheme: northcarolina_scheme
    # Defines colorings for input data sources
    # (e.g. "background_data" is "yes" or "no").
    auspice_config: my-ncov-analyses/auspice-config-custom-data.json

subsampling:
  northcarolina_scheme:
  	custom_sample:
      query: --query "(corvaseq == 'yes')"
  	nc_context:
      query: --query "(corvaseq != 'yes') & (division == 'North Carolina')"
      max_sequences: 1000
      group_by: year month #Sequences willbe subsampled evenly across all combinations of year and month, with sequences genetically similar to custom_sample prioritized 
      priorities:
        type: proximity
        focus: custom_sample #this section will select 1000 data pieces from North Carolina from the reference data and north america data inputs. 
    usa_context:
      query: --query "(corvaseq != 'yes') & (country == 'USA')"
      max_sequences: 100
      group_by: division year month #Sequences willbe subsampled evenly across all combinations of division, year, and month
      priorities:
        type: proximity
        focus: custom_sample
    global_context:
      query: --query "(corvaseq != 'yes')"
      max_sequences: 10
      priorities:
        type: proximity
        focus: custom_sample
